/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import aluno.Aluno;
import classesBasicas.MyTableModel;
import fachada.Fachada;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import turma.Turma;

/**
 *
 * @author Luhan
 */
public class TurmaInserirAlunoTela extends javax.swing.JInternalFrame {

    /**
     * Creates new form TurmaInserirAlunoTela
     */
    Fachada fachada = new Fachada();
    MyTableModel modeloAluno = new MyTableModel(), modeloTurma = new MyTableModel();
    ArrayList<Aluno> alunos = new ArrayList<>();
    ArrayList<Turma> turmas = new ArrayList<>();

    public TurmaInserirAlunoTela() {
        initComponents();
        jTableAluno.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modeloAluno.setColumnIdentifiers(new String[]{"Matrícula", "Nome"});
        carregarAlunos();
        jTableAluno.setModel(modeloAluno);
        jTableTurma.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        modeloTurma.setColumnIdentifiers(new String[]{"Código", "Atividade", "Descrição"});
        carregarTurmas();
        jTableTurma.setModel(modeloTurma);
    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldTurma = new classesBasicas.JTextFieldSomenteNumeros();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTurma = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldAluno = new classesBasicas.JTextFieldSomenteNumeros();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAluno = new javax.swing.JTable();
        jButtonInserirAlunoTurma = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel3.setText("Cod Turma:");

        jTextFieldTurma.setEditable(false);
        jTextFieldTurma.setBackground(new java.awt.Color(204, 204, 204));

        jTableTurma.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableTurma.getTableHeader().setReorderingAllowed(false);
        jTableTurma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTurmaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableTurma);

        jLabel1.setText("Mat Aluno:");

        jTextFieldAluno.setEditable(false);
        jTextFieldAluno.setBackground(new java.awt.Color(204, 204, 204));
        jTextFieldAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAlunoActionPerformed(evt);
            }
        });

        jTableAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableAluno.getTableHeader().setReorderingAllowed(false);
        jTableAluno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAlunoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableAluno);

        jButtonInserirAlunoTurma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/add.png"))); // NOI18N
        jButtonInserirAlunoTurma.setText("Inserir");
        jButtonInserirAlunoTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserirAlunoTurmaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonInserirAlunoTurma)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(jTextFieldTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextFieldAluno, jTextFieldTurma});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButtonInserirAlunoTurma)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTextFieldAluno, jTextFieldTurma});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAlunoActionPerformed

    private void jButtonInserirAlunoTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserirAlunoTurmaActionPerformed
        // TODO add your handling code here:
        try {
            //DADOS DA TURMA
            Turma turma = new Turma();
            turma.setCodigo(Integer.parseInt(jTextFieldTurma.getText()));
            turma.getMonitor().setMatricula(Integer.parseInt(jTextFieldAluno.getText()));
            fachada.inserirAlunoTurma(turma);
            JOptionPane.showMessageDialog(rootPane, "Aluno cadastrado na turma com sucesso");
            dispose();
            //Limpar Campos preenchidos 
            jTextFieldTurma.setText("");
            jTextFieldAluno.setText("");
            modeloAluno.setRowCount(0);
            modeloTurma.setRowCount(0);
            //Retornar para o início
            jTextFieldTurma.requestFocus();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_jButtonInserirAlunoTurmaActionPerformed

    private void deleteRowsAluno() {
        while (modeloAluno.getRowCount() > 0) {
            modeloAluno.removeRow(0);
        }
    }

    private void deleteRowsTurma() {
        while (modeloTurma.getRowCount() > 0) {
            modeloTurma.removeRow(0);
        }
    }

    private void jTableTurmaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTurmaMouseClicked
        // TODO add your handling code here:
        int row = jTableTurma.getSelectedRow();
        if (row > -1) {
            jTextFieldTurma.setText(turmas.get(row).getCodigo() + "");
        }
    }//GEN-LAST:event_jTableTurmaMouseClicked

    private void jTableAlunoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAlunoMouseClicked
        // TODO add your handling code here:
        int row = jTableAluno.getSelectedRow();
        if (row > -1) {
            jTextFieldAluno.setText(alunos.get(row).getMatricula() + "");
        }
    }//GEN-LAST:event_jTableAlunoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonInserirAlunoTurma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAluno;
    private javax.swing.JTable jTableTurma;
    private javax.swing.JTextField jTextFieldAluno;
    private javax.swing.JTextField jTextFieldTurma;
    // End of variables declaration//GEN-END:variables

    private void carregarAlunos() {
        modeloAluno.setRowCount(0);
        try {
            alunos = fachada.listarAlunos(new Turma());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
        if (alunos.size() > 0) {
            for (Aluno al : alunos) {
                modeloAluno.addRow(new String[]{al.getMatricula() + "", al.getNome()});
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Não existe resultados para monitor com o filtro passado");
        }
    }

    private void carregarTurmas() {
        modeloTurma.setRowCount(0);
        try {
            turmas = fachada.listar(new Turma());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
        if (turmas.size() > 0) {
            for (Turma tur : turmas) {
                modeloTurma.addRow(new String[]{tur.getCodigo() + "", tur.getAtividade().getCodigo() + "", tur.getAtividade().getDescricao()});
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Não existe resultados para monitor com o filtro passado");
        }

    }
}
